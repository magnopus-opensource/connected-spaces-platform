// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Multiplayer
{
    /// <summary>The serialiser is responsible for converting a SpaceEntity instance into a data structure that both SignalR</summary>
    /// <remarks>and our servers can understand and use.</remarks>
    /// <remarks>/// To use the serialiser, Start with BeginEntity(), then use the write(bool, int, etc) functions to write data at the</remarks>
    /// <remarks>Entity level. Use BeginComponents() to start writing as the Server component data, with each BeginComponent and</remarks>
    /// <remarks>EndComponent brace dictating information written into a server component. Within a component, use WriteProperty()</remarks>
    /// <remarks>to write the individual data. Ensure you finish by closing out the relevant sections with the 'End' functions.</remarks>

    public interface IEntitySerialiser
    {
        void BeginEntity();

        void EndEntity();

        void WriteBool(bool Value);

        void WriteByte(byte Value);

        void WriteDouble(double Value);

        void WriteInt64(long Value);

        void WriteUInt64(ulong Value);

        void WriteString(string Value);

        void WriteVector3(Csp.Common.Vector3 Value);

        void WriteVector4(Csp.Common.Vector4 Value);

        void WriteNull();

        void BeginArray();

        void EndArray();

        void BeginComponents();

        void EndComponents();

        void BeginComponent(ushort Id, ulong Type);

        void EndComponent();

        void WriteProperty(ulong Id, Csp.Multiplayer.ReplicatedValue Value);

        void AddViewComponent(ushort Id, Csp.Multiplayer.ReplicatedValue Value);
    }
}

