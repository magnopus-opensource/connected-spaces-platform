// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Multiplayer
{
    /// @ingroup Conversation System
    /// <summary>Data class used to contain information when retrieving a collection of messages</summary>

    public class MessageCollectionResult : Csp.Systems.ResultBase, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_multiplayer_MessageCollectionResult";

        #region P/Invoke
#pragma warning disable IDE1006



        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_MessageCollectionResult_GetMessages_ArrayR(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern ulong csp_multiplayer_MessageCollectionResult_GetTotalCountC_uint64_t(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_MessageCollectionResult_Conv_voidP(IntPtr arg1);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_MessageCollectionResult_Conv_uint64_t(ulong ResultTotalCount);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_MessageCollectionResult_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal MessageCollectionResult(NativePointer ptr) : base(ptr) { }

        public MessageCollectionResult(Csp.Systems.ResultBase baseInstance)
            : base(new NativePointer(baseInstance._ptr, baseInstance._ownsPtr ? (byte)1 : (byte)0))
        {
            // Prevent previous instance from freeing underlying pointer when destroyed
            baseInstance._ownsPtr = false;
        }

        /// <summary>Gets the list of messages, as message info objects, from this result.</summary>
        /// @retrun Array of message info objects.


        public Csp.Common.Array<Csp.Multiplayer.MessageInfo> GetMessages()
        {
            var _result = new Csp.Common.Array<Csp.Multiplayer.MessageInfo>(
                csp_multiplayer_MessageCollectionResult_GetMessages_ArrayR(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the total number of messages in the conversation.</summary>
        /// <remarks>/// If the async operation was using pagination this count number represents the sum of how many messages exist in all pages.</remarks>
        /// <remarks>If the async operation is not using pagination this count number will be equal to the ConversationMessages array size.</remarks>
        /// <remarks>/// @return uint64_t : count number as described above.</remarks>


        public ulong GetTotalCount()
        {
            var _result = csp_multiplayer_MessageCollectionResult_GetTotalCountC_uint64_t(_ptr);

            return _result;
        }

        ~MessageCollectionResult()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_multiplayer_MessageCollectionResult_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        new public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

