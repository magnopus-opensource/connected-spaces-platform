// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Multiplayer
{
    /// @ingroup ButtonSpaceComponent
    /// <summary>Data representation of an ButtonSpaceComponent.</summary>

    public class ButtonSpaceComponent
        : Csp.Multiplayer.ComponentBase,
          Csp.Multiplayer.IEnableableComponent,
          Csp.Multiplayer.ITransformComponent,
          Csp.Multiplayer.IVisibleComponent,
          IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_multiplayer_ButtonSpaceComponent";

        #region P/Invoke
#pragma warning disable IDE1006



        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ButtonSpaceComponent_Ctor_SpaceEntityP(IntPtr Parent);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ButtonSpaceComponent_GetLabelTextC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetLabelText_void_StringRC(IntPtr @class, IntPtr Value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ButtonSpaceComponent_GetIconAssetIdC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetIconAssetId_void_StringRC(
            IntPtr @class,
            IntPtr Value
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ButtonSpaceComponent_GetAssetCollectionIdC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetAssetCollectionId_void_StringRC(
            IntPtr @class,
            IntPtr Value
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ButtonSpaceComponent_GetPositionC_Vector3RC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetPosition_void_Vector3RC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ButtonSpaceComponent_GetRotationC_Vector4RC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetRotation_void_Vector4RC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ButtonSpaceComponent_GetScaleC_Vector3RC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetScale_void_Vector3RC(IntPtr @class, IntPtr InValue);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ButtonSpaceComponent_GetTransformC_SpaceTransform(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetTransform_void_SpaceTransformRC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_multiplayer_ButtonSpaceComponent_GetIsEnabledC_bool(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetIsEnabled_void_bool(IntPtr @class, bool InValue);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_multiplayer_ButtonSpaceComponent_GetIsVisibleC_bool(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetIsVisible_void_bool(IntPtr @class, bool InValue);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_multiplayer_ButtonSpaceComponent_GetIsARVisibleC_bool(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_SetIsARVisible_void_bool(IntPtr @class, bool InValue);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ButtonSpaceComponent_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal ButtonSpaceComponent(NativePointer ptr) : base(ptr) { }

        public ButtonSpaceComponent(Csp.Multiplayer.ComponentBase baseInstance)
            : base(new NativePointer(baseInstance._ptr, baseInstance._ownsPtr ? (byte)1 : (byte)0))
        {
            // Prevent previous instance from freeing underlying pointer when destroyed
            baseInstance._ownsPtr = false;
        }

        /// <summary>Constructs the button space component, and associates it with the specified Parent space entity.</summary>
        /// <param name="Parent">The Space entity that owns this component.</param>

        public ButtonSpaceComponent(Csp.Multiplayer.SpaceEntity Parent)
        {
            var np = csp_multiplayer_ButtonSpaceComponent_Ctor_SpaceEntityP(Parent._ptr);
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        /// <summary>Gets the text of the label of this button.</summary>
        /// <returns>The text on the label of this button.</returns>


        public string GetLabelText()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetLabelTextC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Sets the text of the label of this button.</summary>
        /// <param name="Value">The text on the label of this button.</param>


        public void SetLabelText(string Value)
        {
            csp_multiplayer_ButtonSpaceComponent_SetLabelText_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <summary>Gets the ID of the icon asset associated with the button of this component.</summary>
        /// <remarks>This is used to show a specific icon on the button by ID.</remarks>
        /// <returns>The ID of the icon asset associated with the button of this component.</returns>


        public string GetIconAssetId()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetIconAssetIdC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Sets the ID of the icon asset associated with the button of this component.</summary>
        /// <remarks>This is used to show a specific icon on the button by ID.</remarks>
        /// <param name="Value">The ID of the icon asset associated with the button of this component.</param>


        public void SetIconAssetId(string Value)
        {
            csp_multiplayer_ButtonSpaceComponent_SetIconAssetId_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <summary>Gets the ID of the asset collection associated with this component.</summary>
        /// <remarks>To retrieve this component's button asset, both the Asset ID and the Asset Collection ID are required.</remarks>
        /// <returns>The ID of the asset collection associated with this component.</returns>


        public string GetAssetCollectionId()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetAssetCollectionIdC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Sets the ID of the asset collection associated with this component.</summary>
        /// <remarks>To retrieve this component's button asset, both the Asset ID and the Asset Collection ID are required.</remarks>
        /// <param name="Value">The ID of the asset collection associated with this component.</param>


        public void SetAssetCollectionId(string Value)
        {
            csp_multiplayer_ButtonSpaceComponent_SetAssetCollectionId_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <remarks>\addtogroup ITransformComponent</remarks>
        /// @{
        /// @copydoc IPositionComponent::GetPosition()


        public Csp.Common.Vector3 GetPosition()
        {
            var _result = new Csp.Common.Vector3(csp_multiplayer_ButtonSpaceComponent_GetPositionC_Vector3RC(_ptr));

            return _result;
        }

        /// @copydoc IPositionComponent::SetPosition()


        public void SetPosition(Csp.Common.Vector3 InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetPosition_void_Vector3RC(_ptr, InValue._ptr);
        }

        /// @copydoc IRotationComponent::GetRotation()


        public Csp.Common.Vector4 GetRotation()
        {
            var _result = new Csp.Common.Vector4(csp_multiplayer_ButtonSpaceComponent_GetRotationC_Vector4RC(_ptr));

            return _result;
        }

        /// @copydoc IRotationComponent::SetRotation()


        public void SetRotation(Csp.Common.Vector4 InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetRotation_void_Vector4RC(_ptr, InValue._ptr);
        }

        /// @copydoc IScaleComponent::GetScale()


        public Csp.Common.Vector3 GetScale()
        {
            var _result = new Csp.Common.Vector3(csp_multiplayer_ButtonSpaceComponent_GetScaleC_Vector3RC(_ptr));

            return _result;
        }

        /// @copydoc IScaleComponent::SetScale()


        public void SetScale(Csp.Common.Vector3 InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetScale_void_Vector3RC(_ptr, InValue._ptr);
        }

        /// @copydoc ITransformComponent::GetTransform()


        public Csp.Multiplayer.SpaceTransform GetTransform()
        {
            var _result = new Csp.Multiplayer.SpaceTransform(
                csp_multiplayer_ButtonSpaceComponent_GetTransformC_SpaceTransform(_ptr)
            );

            return _result;
        }

        /// @copydoc ITransformComonent::SetTransform()


        public void SetTransform(Csp.Multiplayer.SpaceTransform InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetTransform_void_SpaceTransformRC(_ptr, InValue._ptr);
        }

        /// @}
        /// <remarks>\addtogroup IClickableComponent</remarks>
        /// @{
        /// @copydoc IClickableComponent::GetIsEnabled()


        public bool GetIsEnabled()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetIsEnabledC_bool(_ptr);

            return _result;
        }

        /// @copydoc IClickableComponent::SetIsEnabled()


        public void SetIsEnabled(bool InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetIsEnabled_void_bool(_ptr, InValue);
        }

        /// @}
        /// <remarks>\addtogroup IVisibleComponent</remarks>
        /// @{
        /// @copydoc IVisibleComponent::GetIsVisible()


        public bool GetIsVisible()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetIsVisibleC_bool(_ptr);

            return _result;
        }

        /// @copydoc IVisibleComponent::SetIsVisible()


        public void SetIsVisible(bool InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetIsVisible_void_bool(_ptr, InValue);
        }

        /// @copydoc IVisibleComponent::GetIsARVisible()


        public bool GetIsARVisible()
        {
            var _result = csp_multiplayer_ButtonSpaceComponent_GetIsARVisibleC_bool(_ptr);

            return _result;
        }

        /// @copydoc IVisibleComponent::SetIsARVisible()


        public void SetIsARVisible(bool InValue)
        {
            csp_multiplayer_ButtonSpaceComponent_SetIsARVisible_void_bool(_ptr, InValue);
        }

        ~ButtonSpaceComponent()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_multiplayer_ButtonSpaceComponent_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        new public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

