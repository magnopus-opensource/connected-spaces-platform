// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Multiplayer
{
    /// @ingroup ReflectionSpaceComponent
    /// <summary>Data representation of an ReflectionSpaceComponent.</summary>

    public class ReflectionSpaceComponent
        : Csp.Multiplayer.ComponentBase,
          Csp.Multiplayer.IPositionComponent,
          Csp.Multiplayer.IScaleComponent,
          Csp.Multiplayer.IThirdPartyComponentRef,
          IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_multiplayer_ReflectionSpaceComponent";

        #region P/Invoke
#pragma warning disable IDE1006



        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ReflectionSpaceComponent_Ctor_SpaceEntityP(IntPtr Parent);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ReflectionSpaceComponent_GetNameC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetName_void_StringRC(IntPtr @class, IntPtr Value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ReflectionSpaceComponent_GetReflectionAssetIdC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetReflectionAssetId_void_StringRC(
            IntPtr @class,
            IntPtr Value
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ReflectionSpaceComponent_GetAssetCollectionIdC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetAssetCollectionId_void_StringRC(
            IntPtr @class,
            IntPtr Value
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ReflectionSpaceComponent_GetPositionC_Vector3RC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetPosition_void_Vector3RC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_multiplayer_ReflectionSpaceComponent_GetScaleC_Vector3RC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetScale_void_Vector3RC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Multiplayer.ReflectionShape csp_multiplayer_ReflectionSpaceComponent_GetReflectionShapeC_ReflectionShape(
            IntPtr @class
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetReflectionShape_void_ReflectionShape(
            IntPtr @class,
            Csp.Multiplayer.ReflectionShape Value
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_multiplayer_ReflectionSpaceComponent_GetThirdPartyComponentRefC_StringRC(
            IntPtr @class
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_SetThirdPartyComponentRef_void_StringRC(
            IntPtr @class,
            IntPtr InValue
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_multiplayer_ReflectionSpaceComponent_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal ReflectionSpaceComponent(NativePointer ptr) : base(ptr) { }

        public ReflectionSpaceComponent(Csp.Multiplayer.ComponentBase baseInstance)
            : base(new NativePointer(baseInstance._ptr, baseInstance._ownsPtr ? (byte)1 : (byte)0))
        {
            // Prevent previous instance from freeing underlying pointer when destroyed
            baseInstance._ownsPtr = false;
        }

        /// <summary>Constructs the reflection component, and associates it with the specified Parent space entity.</summary>
        /// <param name="Parent">The Space entity that owns this component.</param>

        public ReflectionSpaceComponent(Csp.Multiplayer.SpaceEntity Parent)
        {
            var np = csp_multiplayer_ReflectionSpaceComponent_Ctor_SpaceEntityP(Parent._ptr);
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        /// <summary>Get the name of the Reflection component.</summary>
        /// <returns>Csp::common::string specifying the component name.</returns>


        public string GetName()
        {
            var _result = csp_multiplayer_ReflectionSpaceComponent_GetNameC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Set the name for the Reflection component.</summary>
        /// <param name="Value">Name for the Reflection component.</param>


        public void SetName(string Value)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetName_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <summary>Get the Asset Id for the Reflection texture asset.</summary>


        public string GetReflectionAssetId()
        {
            var _result = csp_multiplayer_ReflectionSpaceComponent_GetReflectionAssetIdC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Set the Asset Id for the Reflection texture asset.</summary>
        /// <param name="Value">Id for Reflection texture asset.</param>


        public void SetReflectionAssetId(string Value)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetReflectionAssetId_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <summary>Gets the ID of the asset collection associated with this component.</summary>
        /// <remarks>To retrieve this component's reflection asset, both the Asset ID and the Asset Collection ID are required.</remarks>
        /// <returns>The ID of the asset collection associated with this component.</returns>


        public string GetAssetCollectionId()
        {
            var _result = csp_multiplayer_ReflectionSpaceComponent_GetAssetCollectionIdC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Sets the ID of the asset collection associated with this component.</summary>
        /// <remarks>To retrieve this component's reflection asset, both the Asset ID and the Asset Collection ID are required.</remarks>
        /// <param name="Value">The ID of the asset collection associated with this component.</param>


        public void SetAssetCollectionId(string Value)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetAssetCollectionId_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(Value)
            );
        }

        /// <remarks>\addtogroup IPositionComponent</remarks>
        /// @{
        /// @copydoc IPositionComponent::GetPosition()


        public Csp.Common.Vector3 GetPosition()
        {
            var _result = new Csp.Common.Vector3(csp_multiplayer_ReflectionSpaceComponent_GetPositionC_Vector3RC(_ptr));

            return _result;
        }

        /// @copydoc IPositionComponent::SetPosition()


        public void SetPosition(Csp.Common.Vector3 InValue)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetPosition_void_Vector3RC(_ptr, InValue._ptr);
        }

        /// @}
        /// <remarks>\addtogroup IScaleComponent</remarks>
        /// @{
        /// @copydoc IScaleComponent::GetScale()


        public Csp.Common.Vector3 GetScale()
        {
            var _result = new Csp.Common.Vector3(csp_multiplayer_ReflectionSpaceComponent_GetScaleC_Vector3RC(_ptr));

            return _result;
        }

        /// @copydoc IScaleComponent::SetScale()


        public void SetScale(Csp.Common.Vector3 InValue)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetScale_void_Vector3RC(_ptr, InValue._ptr);
        }

        /// @}
        /// <summary>Get the reflection shape enum value.</summary>
        /// <remarks>ReflectionShape.UnitBox: Projects a texture in a planar fashion from all six directions (like an inward facing cube).</remarks>
        /// <remarks>ReflectionShape.UnitSphere: Warps the texture into a spherical shape and projects it onto a surface.</remarks>
        /// <returns>Enum specifying whether the captured reflections are box projected (UnitCube) or spherical projected (UnitSphere).</returns>


        public Csp.Multiplayer.ReflectionShape GetReflectionShape()
        {
            var _result = csp_multiplayer_ReflectionSpaceComponent_GetReflectionShapeC_ReflectionShape(_ptr);

            return _result;
        }

        /// <summary>Set the reflection shape.</summary>
        /// <remarks>ReflectionShape.UnitBox: Projects a texture in a planar fashion from all six directions (like an inward facing cube).</remarks>
        /// <remarks>ReflectionShape.UnitSphere: Warps the texture into a spherical shape and projects it onto a surface.</remarks>
        /// <param name="Value">Enum specifying whether the captured reflections are box (UnitCube) or spherical projected (UnitSphere).</param>


        public void SetReflectionShape(Csp.Multiplayer.ReflectionShape Value)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetReflectionShape_void_ReflectionShape(_ptr, Value);
        }

        /// <remarks>\addtogroup IThirdPartyComponentRef</remarks>
        /// @{
        /// @copydoc IThirdPartyComponentRef::GetThirdPartyComponentRef()


        public string GetThirdPartyComponentRef()
        {
            var _result = csp_multiplayer_ReflectionSpaceComponent_GetThirdPartyComponentRefC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// @copydoc IThirdPartyComponentRef::SetThirdPartyComponentRef()


        public void SetThirdPartyComponentRef(string InValue)
        {
            csp_multiplayer_ReflectionSpaceComponent_SetThirdPartyComponentRef_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(InValue)
            );
        }

        ~ReflectionSpaceComponent()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_multiplayer_ReflectionSpaceComponent_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        new public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

