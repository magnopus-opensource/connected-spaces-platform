// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Common
{
    /// <summary>Represents a 4 dimensional vector.</summary>

    public class Vector4 : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_common_Vector4";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern float csp_common_Vector4__Get_X(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_common_Vector4__Set_X(IntPtr @class, float value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern float csp_common_Vector4__Get_Y(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_common_Vector4__Set_Y(IntPtr @class, float value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern float csp_common_Vector4__Get_Z(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_common_Vector4__Set_Z(IntPtr @class, float value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern float csp_common_Vector4__Get_W(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_common_Vector4__Set_W(IntPtr @class, float value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_common_Vector4_Zero_Vector4RC();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_common_Vector4_One_Vector4RC();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_common_Vector4_Identity_Vector4RC();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_common_Vector4_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_common_Vector4_Ctor_float_float_float_float(float X, float Y, float Z, float W);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_common_Vector4_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal Vector4(NativePointer ptr) : base(ptr) { }

        public float X
        {
            get => csp_common_Vector4__Get_X(_ptr);
            set => csp_common_Vector4__Set_X(_ptr, value);
        }

        public float Y
        {
            get => csp_common_Vector4__Get_Y(_ptr);
            set => csp_common_Vector4__Set_Y(_ptr, value);
        }

        public float Z
        {
            get => csp_common_Vector4__Get_Z(_ptr);
            set => csp_common_Vector4__Set_Z(_ptr, value);
        }

        public float W
        {
            get => csp_common_Vector4__Get_W(_ptr);
            set => csp_common_Vector4__Set_W(_ptr, value);
        }

        /// <summary>Returns a Vector4 with all fields set to 0.</summary>
        /// <returns>Const vector4&</returns>


        public static Csp.Common.Vector4 Zero()
        {
            var _result = new Csp.Common.Vector4(csp_common_Vector4_Zero_Vector4RC());

            return _result;
        }

        /// <summary>Returns a Vector4 with all fields set to 1.</summary>
        /// <returns>Const vector4&</returns>


        public static Csp.Common.Vector4 One()
        {
            var _result = new Csp.Common.Vector4(csp_common_Vector4_One_Vector4RC());

            return _result;
        }

        /// <summary>Returns a Vector4 that represents an identity quaternion (0, 0, 0, 1).</summary>
        /// <returns>Const vector4&</returns>


        public static Csp.Common.Vector4 Identity()
        {
            var _result = new Csp.Common.Vector4(csp_common_Vector4_Identity_Vector4RC());

            return _result;
        }

        /// <summary>Constructs a Vector4 with all fields set to 0.</summary>

        public Vector4()
        {
            var np = csp_common_Vector4_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        /// <summary>Constructs a Vector4 with the given x, y, z, w values.</summary>
        /// <param name="X">Float</param>
        /// <param name="Y">Float</param>
        /// <param name="Z">Float</param>
        /// <param name="W">Float</param>

        public Vector4(float X, float Y, float Z, float W)
        {
            var np = csp_common_Vector4_Ctor_float_float_float_float(X, Y, Z, W);
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        ~Vector4()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_common_Vector4_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

