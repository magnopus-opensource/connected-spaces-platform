// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup Asset System
    /// <summary>Data representation of an asset which maps to a PrototypeService::AssetDetail.</summary>

    public class Asset : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_systems_Asset";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_AssetCollectionId(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_AssetCollectionId(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_Id(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Id(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_FileName(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_FileName(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_Name(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Name(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_LanguageCode(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_LanguageCode(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Systems.EAssetType csp_systems_Asset__Get_Type(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Type(IntPtr @class, Csp.Systems.EAssetType value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_Asset__Get_Platforms(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Platforms(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_Asset__Get_Styles(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Styles(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_ExternalUri(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_ExternalUri(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_Uri(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Uri(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_Checksum(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Checksum(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern int csp_systems_Asset__Get_Version(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_Version(IntPtr @class, int value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_MimeType(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_MimeType(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset__Get_ExternalMimeType(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset__Set_ExternalMimeType(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_Asset_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_Asset_Ctor_AssetRC(IntPtr Other);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_Asset_GetThirdPartyPackagedAssetIdentifierC_StringRC(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset_SetThirdPartyPackagedAssetIdentifier_void_StringRC(
            IntPtr @class,
            IntPtr InThirdPartyPackagedAssetIdentifier
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Systems.EThirdPartyPlatform csp_systems_Asset_GetThirdPartyPlatformTypeC_EThirdPartyPlatformC(
            IntPtr @class
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset_SetThirdPartyPlatformType_void_EThirdPartyPlatformC(
            IntPtr @class,
            Csp.Systems.EThirdPartyPlatform InThirdPartyPlatformType
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_Asset_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal Asset(NativePointer ptr) : base(ptr) { }

        public string AssetCollectionId
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_AssetCollectionId(_ptr));
            set => csp_systems_Asset__Set_AssetCollectionId(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string Id
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_Id(_ptr));
            set => csp_systems_Asset__Set_Id(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string FileName
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_FileName(_ptr));
            set => csp_systems_Asset__Set_FileName(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string Name
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_Name(_ptr));
            set => csp_systems_Asset__Set_Name(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string LanguageCode
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_LanguageCode(_ptr));
            set => csp_systems_Asset__Set_LanguageCode(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public Csp.Systems.EAssetType Type
        {
            get => csp_systems_Asset__Get_Type(_ptr);
            set => csp_systems_Asset__Set_Type(_ptr, value);
        }

        public Csp.Common.Array<Csp.Systems.EAssetPlatform> Platforms
        {
            get => new Csp.Common.Array<Csp.Systems.EAssetPlatform>(csp_systems_Asset__Get_Platforms(_ptr));
            set => csp_systems_Asset__Set_Platforms(_ptr, value._ptr);
        }

        public Csp.Common.Array<string> Styles
        {
            get => new Csp.Common.Array<string>(csp_systems_Asset__Get_Styles(_ptr));
            set => csp_systems_Asset__Set_Styles(_ptr, value._ptr);
        }

        public string ExternalUri
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_ExternalUri(_ptr));
            set => csp_systems_Asset__Set_ExternalUri(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        /// @brief S3 blob URI for Download

        public string Uri
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_Uri(_ptr));
            set => csp_systems_Asset__Set_Uri(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string Checksum
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_Checksum(_ptr));
            set => csp_systems_Asset__Set_Checksum(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public int Version
        {
            get => csp_systems_Asset__Get_Version(_ptr);
            set => csp_systems_Asset__Set_Version(_ptr, value);
        }

        public string MimeType
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_MimeType(_ptr));
            set => csp_systems_Asset__Set_MimeType(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string ExternalMimeType
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_Asset__Get_ExternalMimeType(_ptr));
            set => csp_systems_Asset__Set_ExternalMimeType(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public Asset()
        {
            var np = csp_systems_Asset_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        public Asset(Csp.Systems.Asset Other)
        {
            var np = csp_systems_Asset_Ctor_AssetRC(Other._ptr);
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        /// <summary>Gets the third party packaged asset identifier of this asset</summary>
        /// <returns>Returns a string representing the party packaged asset identifier set for this asset.</returns>


        public string GetThirdPartyPackagedAssetIdentifier()
        {
            var _result = csp_systems_Asset_GetThirdPartyPackagedAssetIdentifierC_StringRC(_ptr);

            var _resultString = WrapperHelper.NativeUTF8ToString(_result);
            Global.Free(_result);

            return _resultString;
        }

        /// <summary>Sets the party packaged asset identifier for this asset</summary>
        /// <param name="InThirdPartyPackagedAssetIdentifier">The third party packaged asset identifier to set.</param>


        public void SetThirdPartyPackagedAssetIdentifier(string InThirdPartyPackagedAssetIdentifier)
        {
            csp_systems_Asset_SetThirdPartyPackagedAssetIdentifier_void_StringRC(
                _ptr,
                WrapperHelper.StringToNativeUTF8(InThirdPartyPackagedAssetIdentifier)
            );
        }

        /// <summary>Gets the third party platform type of this asset</summary>
        /// <returns>Returns a string representing third party platform type set for this asset.</returns>


        public Csp.Systems.EThirdPartyPlatform GetThirdPartyPlatformType()
        {
            var _result = csp_systems_Asset_GetThirdPartyPlatformTypeC_EThirdPartyPlatformC(_ptr);

            return _result;
        }

        /// <summary>Sets third party platform type for this asset</summary>
        /// <param name="InThirdPartyPlatformType">The third party platform type to set.</param>


        public void SetThirdPartyPlatformType(Csp.Systems.EThirdPartyPlatform InThirdPartyPlatformType)
        {
            csp_systems_Asset_SetThirdPartyPlatformType_void_EThirdPartyPlatformC(_ptr, InThirdPartyPlatformType);
        }

        ~Asset()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_Asset_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

