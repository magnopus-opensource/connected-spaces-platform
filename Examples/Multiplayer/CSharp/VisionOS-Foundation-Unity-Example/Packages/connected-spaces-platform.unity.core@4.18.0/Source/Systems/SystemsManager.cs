// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup Systems
    /// <summary>Interface used to access each of the systems.</summary>

    public class SystemsManager : NativeClassWrapper
    {
        internal override string _safeTypeName { get; } = "csp_systems_SystemsManager";

        #region P/Invoke
#pragma warning disable IDE1006



        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_SystemsManager_Dtor(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_Get_SystemsManagerR();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetUserSystem_UserSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetSpaceSystem_SpaceSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetAssetSystem_AssetSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetVoipSystem_VoipSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetScriptSystem_ScriptSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetPointOfInterestSystem_PointOfInterestSystemP(
            IntPtr @class
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetAnchorSystem_AnchorSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetLogSystem_LogSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetSettingsSystem_SettingsSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetGraphQLSystem_GraphQLSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetAnalyticsSystem_AnalyticsSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetMaintenanceSystem_MaintenanceSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetEventTicketingSystem_EventTicketingSystemP(
            IntPtr @class
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetECommerceSystem_ECommerceSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_GetQuotaSystem_QuotaSystemP(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_SystemsManager_Ctor();

#pragma warning restore IDE1006
        #endregion

        internal SystemsManager(NativePointer ptr) : base(ptr) { }

        ~SystemsManager()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_SystemsManager_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }

        public static Csp.Systems.SystemsManager Get()
        {
            var _result = new Csp.Systems.SystemsManager(csp_systems_SystemsManager_Get_SystemsManagerR());

            return _result;
        }

        /// <summary>Retrieves user system.</summary>
        /// <returns>Pointer to the user system class</returns>


        public Csp.Systems.UserSystem GetUserSystem()
        {
            var _result = new Csp.Systems.UserSystem(csp_systems_SystemsManager_GetUserSystem_UserSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves space system.</summary>
        /// <returns>Pointer to the space system class</returns>


        public Csp.Systems.SpaceSystem GetSpaceSystem()
        {
            var _result = new Csp.Systems.SpaceSystem(csp_systems_SystemsManager_GetSpaceSystem_SpaceSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves asset system.</summary>
        /// <returns>Pointer to the asset system class</returns>


        public Csp.Systems.AssetSystem GetAssetSystem()
        {
            var _result = new Csp.Systems.AssetSystem(csp_systems_SystemsManager_GetAssetSystem_AssetSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves voip system.</summary>
        /// <returns>Pointer to the voip system class</returns>


        public Csp.Systems.VoipSystem GetVoipSystem()
        {
            var _result = new Csp.Systems.VoipSystem(csp_systems_SystemsManager_GetVoipSystem_VoipSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves script system.</summary>
        /// <returns>Pointer to the script system class</returns>


        public Csp.Systems.ScriptSystem GetScriptSystem()
        {
            var _result = new Csp.Systems.ScriptSystem(csp_systems_SystemsManager_GetScriptSystem_ScriptSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves the Point Of Interest system.</summary>
        /// <returns>Pointer to the poi system class</returns>


        public Csp.Systems.PointOfInterestSystem GetPointOfInterestSystem()
        {
            var _result = new Csp.Systems.PointOfInterestSystem(
                csp_systems_SystemsManager_GetPointOfInterestSystem_PointOfInterestSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the Anchor system.</summary>
        /// <returns>Pointer to the anchor system class</returns>


        public Csp.Systems.AnchorSystem GetAnchorSystem()
        {
            var _result = new Csp.Systems.AnchorSystem(csp_systems_SystemsManager_GetAnchorSystem_AnchorSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves the Log system.</summary>
        /// <returns>Pointer to the log system class</returns>


        public Csp.Systems.LogSystem GetLogSystem()
        {
            var _result = new Csp.Systems.LogSystem(csp_systems_SystemsManager_GetLogSystem_LogSystemP(_ptr));

            return _result;
        }

        /// <summary>Retrieves the Settings system.</summary>
        /// <returns>Pointer to the settings system class</returns>


        public Csp.Systems.SettingsSystem GetSettingsSystem()
        {
            var _result = new Csp.Systems.SettingsSystem(
                csp_systems_SystemsManager_GetSettingsSystem_SettingsSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the GraphQL system.</summary>
        /// <returns>Pointer to the graphql system class</returns>


        public Csp.Systems.GraphQLSystem GetGraphQLSystem()
        {
            var _result = new Csp.Systems.GraphQLSystem(
                csp_systems_SystemsManager_GetGraphQLSystem_GraphQLSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the Analytics system.</summary>
        /// <returns>Pointer to the analytics system class</returns>


        public Csp.Systems.AnalyticsSystem GetAnalyticsSystem()
        {
            var _result = new Csp.Systems.AnalyticsSystem(
                csp_systems_SystemsManager_GetAnalyticsSystem_AnalyticsSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the Maintenance system.</summary>
        /// <returns>Pointer to the maintenance system class</returns>


        public Csp.Systems.MaintenanceSystem GetMaintenanceSystem()
        {
            var _result = new Csp.Systems.MaintenanceSystem(
                csp_systems_SystemsManager_GetMaintenanceSystem_MaintenanceSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the Event Ticketing system.</summary>
        /// <returns>Pointer to the event ticketing system class</returns>


        public Csp.Systems.EventTicketingSystem GetEventTicketingSystem()
        {
            var _result = new Csp.Systems.EventTicketingSystem(
                csp_systems_SystemsManager_GetEventTicketingSystem_EventTicketingSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the ECommerce system.</summary>
        /// <returns>Pointer to the ecommerce system class</returns>


        public Csp.Systems.ECommerceSystem GetECommerceSystem()
        {
            var _result = new Csp.Systems.ECommerceSystem(
                csp_systems_SystemsManager_GetECommerceSystem_ECommerceSystemP(_ptr)
            );

            return _result;
        }

        /// <summary>Retrieves the Quota system.</summary>
        /// <returns>Pointer to the quota system class</returns>


        public Csp.Systems.QuotaSystem GetQuotaSystem()
        {
            var _result = new Csp.Systems.QuotaSystem(csp_systems_SystemsManager_GetQuotaSystem_QuotaSystemP(_ptr));

            return _result;
        }

        protected SystemsManager() { }
    }
}

