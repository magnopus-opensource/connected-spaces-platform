// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// <summary>Data structure representing a Geo-spatial location, handling lonitude and latitude, with a validation function</summary>

    public class GeoLocation : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_systems_GeoLocation";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern double csp_systems_GeoLocation__Get_Longitude(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_GeoLocation__Set_Longitude(IntPtr @class, double value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern double csp_systems_GeoLocation__Get_Latitude(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_GeoLocation__Set_Latitude(IntPtr @class, double value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_GeoLocation_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_GeoLocation_Ctor_double_double(double InLongitude, double InLatitude);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_systems_GeoLocation_IsValidC_bool(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_GeoLocation_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal GeoLocation(NativePointer ptr) : base(ptr) { }

        public double Longitude
        {
            get => csp_systems_GeoLocation__Get_Longitude(_ptr);
            set => csp_systems_GeoLocation__Set_Longitude(_ptr, value);
        }

        public double Latitude
        {
            get => csp_systems_GeoLocation__Get_Latitude(_ptr);
            set => csp_systems_GeoLocation__Set_Latitude(_ptr, value);
        }

        public GeoLocation()
        {
            var np = csp_systems_GeoLocation_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        public GeoLocation(double InLongitude, double InLatitude)
        {
            var np = csp_systems_GeoLocation_Ctor_double_double(InLongitude, InLatitude);
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        /// <summary>Validates if the set data for longitude and latitude is a valid location.</summary>
        /// <returns>A boolean represnting validity of the location.</returns>


        public bool IsValid()
        {
            var _result = csp_systems_GeoLocation_IsValidC_bool(_ptr);

            return _result;
        }

        ~GeoLocation()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_GeoLocation_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

