// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup Anchor System
    /// <summary>Data representation of an AnchorResolution</summary>

    public class AnchorResolution : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_systems_AnchorResolution";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_AnchorResolution__Get_Id(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_Id(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_AnchorResolution__Get_AnchorId(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_AnchorId(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_systems_AnchorResolution__Get_SuccessfullyResolved(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_SuccessfullyResolved(IntPtr @class, bool value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern int csp_systems_AnchorResolution__Get_ResolveAttempted(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_ResolveAttempted(IntPtr @class, int value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern double csp_systems_AnchorResolution__Get_ResolveTime(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_ResolveTime(IntPtr @class, double value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_AnchorResolution__Get_Tags(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution__Set_Tags(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_AnchorResolution_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_AnchorResolution_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal AnchorResolution(NativePointer ptr) : base(ptr) { }

        public string Id
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_AnchorResolution__Get_Id(_ptr));
            set => csp_systems_AnchorResolution__Set_Id(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public string AnchorId
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_AnchorResolution__Get_AnchorId(_ptr));
            set => csp_systems_AnchorResolution__Set_AnchorId(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        public bool SuccessfullyResolved
        {
            get => csp_systems_AnchorResolution__Get_SuccessfullyResolved(_ptr);
            set => csp_systems_AnchorResolution__Set_SuccessfullyResolved(_ptr, value);
        }

        public int ResolveAttempted
        {
            get => csp_systems_AnchorResolution__Get_ResolveAttempted(_ptr);
            set => csp_systems_AnchorResolution__Set_ResolveAttempted(_ptr, value);
        }

        public double ResolveTime
        {
            get => csp_systems_AnchorResolution__Get_ResolveTime(_ptr);
            set => csp_systems_AnchorResolution__Set_ResolveTime(_ptr, value);
        }

        public Csp.Common.Array<string> Tags
        {
            get => new Csp.Common.Array<string>(csp_systems_AnchorResolution__Get_Tags(_ptr));
            set => csp_systems_AnchorResolution__Set_Tags(_ptr, value._ptr);
        }

        public AnchorResolution()
        {
            var np = csp_systems_AnchorResolution_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        ~AnchorResolution()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_AnchorResolution_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

