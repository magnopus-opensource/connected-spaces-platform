// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup Quota System
    /// <summary>Data representation of a progress of a specific feature.</summary>
    /// <remarks>Limit Value of -1 means unlimited usage</remarks>

    public class FeatureQuotaInfo : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_systems_FeatureQuotaInfo";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Systems.TierFeatures csp_systems_FeatureQuotaInfo__Get_FeatureName(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_FeatureQuotaInfo__Set_FeatureName(IntPtr @class, Csp.Systems.TierFeatures value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Systems.TierNames csp_systems_FeatureQuotaInfo__Get_TierName(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_FeatureQuotaInfo__Set_TierName(IntPtr @class, Csp.Systems.TierNames value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern int csp_systems_FeatureQuotaInfo__Get_Limit(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_FeatureQuotaInfo__Set_Limit(IntPtr @class, int value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern Csp.Systems.PeriodEnum csp_systems_FeatureQuotaInfo__Get_Period(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_FeatureQuotaInfo__Set_Period(IntPtr @class, Csp.Systems.PeriodEnum value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_FeatureQuotaInfo_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_FeatureQuotaInfo_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal FeatureQuotaInfo(NativePointer ptr) : base(ptr) { }

        public Csp.Systems.TierFeatures FeatureName
        {
            get => csp_systems_FeatureQuotaInfo__Get_FeatureName(_ptr);
            set => csp_systems_FeatureQuotaInfo__Set_FeatureName(_ptr, value);
        }

        public Csp.Systems.TierNames TierName
        {
            get => csp_systems_FeatureQuotaInfo__Get_TierName(_ptr);
            set => csp_systems_FeatureQuotaInfo__Set_TierName(_ptr, value);
        }

        public int Limit
        {
            get => csp_systems_FeatureQuotaInfo__Get_Limit(_ptr);
            set => csp_systems_FeatureQuotaInfo__Set_Limit(_ptr, value);
        }

        public Csp.Systems.PeriodEnum Period
        {
            get => csp_systems_FeatureQuotaInfo__Get_Period(_ptr);
            set => csp_systems_FeatureQuotaInfo__Set_Period(_ptr, value);
        }

        public FeatureQuotaInfo()
        {
            var np = csp_systems_FeatureQuotaInfo_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        ~FeatureQuotaInfo()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_FeatureQuotaInfo_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

