// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup ECommerce System
    /// <summary>Public facing system that allows interfacing with CSP's concept of a ECommerce platform.</summary>
    /// <remarks>Offers methods for utilising Ecommerce through CSP</remarks>

    public class ECommerceSystem : Csp.Systems.SystemBase
    {
        internal override string _safeTypeName { get; } = "csp_systems_ECommerceSystem";

        #region P/Invoke
#pragma warning disable IDE1006



        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_ECommerceSystem_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_Dtor(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_GetProductInformation_void_StringRC_StringRC_ProductInfoResultCallback(
            IntPtr @class,
            string SpaceId,
            string ProductId,
            GetProductInformationCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_GetCheckoutInformation_void_StringRC_StringRC_CheckoutInfoResultCallback(
            IntPtr @class,
            string SpaceId,
            string CartId,
            GetCheckoutInformationCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_CreateCart_void_StringRC_CartInfoResultCallback(
            IntPtr @class,
            string SpaceId,
            CreateCartCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_GetCart_void_StringRC_StringRC_CartInfoResultCallback(
            IntPtr @class,
            string SpaceId,
            string CartId,
            GetCartCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_AddShopifyStore_void_StringRC_StringRC_boolC_StringRC_AddShopifyStoreResultCallback(
            IntPtr @class,
            string StoreName,
            string SpaceId,
            bool IsEcommerceActive,
            string PrivateAccessToken,
            AddShopifyStoreCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_ValidateShopifyStore_void_StringRC_StringRC_ValidateShopifyStoreResultCallback(
            IntPtr @class,
            string StoreName,
            string PrivateAccessToken,
            ValidateShopifyStoreCallbackDelegate callback,
            IntPtr callbackStateObject
        );

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ECommerceSystem_UpdateCartInformation_void_CartInfoRC_CartInfoResultCallback(
            IntPtr @class,
            IntPtr CartInformation,
            UpdateCartInformationCallbackDelegate callback,
            IntPtr callbackStateObject
        );

#pragma warning restore IDE1006
        #endregion

        internal ECommerceSystem(NativePointer ptr) : base(ptr) { }

        public ECommerceSystem(Csp.Systems.SystemBase baseInstance)
            : base(new NativePointer(baseInstance._ptr, baseInstance._ownsPtr ? (byte)1 : (byte)0))
        {
            // Prevent previous instance from freeing underlying pointer when destroyed
            baseInstance._ownsPtr = false;
        }

        delegate void GetProductInformationCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void GetCheckoutInformationCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void CreateCartCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void GetCartCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void AddShopifyStoreCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void ValidateShopifyStoreCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        delegate void UpdateCartInformationCallbackDelegate(IntPtr _StateObject__, NativePointer Result);

        public ECommerceSystem()
        {
            var np = csp_systems_ECommerceSystem_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        ~ECommerceSystem()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_ECommerceSystem_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        new public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (GetProductInformationCallbackDelegate))]
#endif
        static void GetProductInformationCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.ProductInfoResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.ProductInfoResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly GetProductInformationCallbackDelegate GetProductInformationDelegateInstance =
            GetProductInformationCallbackDelegateFunction;

        /// <summary>Get product information from a shopify store within a space</summary>
                /// <param name="SpaceId">Space id of product</param>
                /// <param name="ProductId">Product id of product</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.ProductInfoResult> GetProductInformation(string SpaceId, string ProductId)
        {
            var tcs = new TaskCompletionSource<Csp.Systems.ProductInfoResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_GetProductInformation_void_StringRC_StringRC_ProductInfoResultCallback(
                _ptr,
                SpaceId,
                ProductId,
                GetProductInformationDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (GetCheckoutInformationCallbackDelegate))]
#endif
        static void GetCheckoutInformationCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.CheckoutInfoResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.CheckoutInfoResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly GetCheckoutInformationCallbackDelegate GetCheckoutInformationDelegateInstance =
            GetCheckoutInformationCallbackDelegateFunction;

        /// <summary>Get checkout information from a shopify store within a space</summary>
                /// <param name="SpaceId">Space id of the cart</param>
                /// <param name="CartId">Id of cart being checked out</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.CheckoutInfoResult> GetCheckoutInformation(string SpaceId, string CartId)
        {
            var tcs = new TaskCompletionSource<Csp.Systems.CheckoutInfoResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_GetCheckoutInformation_void_StringRC_StringRC_CheckoutInfoResultCallback(
                _ptr,
                SpaceId,
                CartId,
                GetCheckoutInformationDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (CreateCartCallbackDelegate))]
#endif
        static void CreateCartCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.CartInfoResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.CartInfoResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly CreateCartCallbackDelegate CreateCartDelegateInstance = CreateCartCallbackDelegateFunction;

        /// <summary>Creates a cart for the current user in the given space.</summary>
                /// <param name="SpaceId">ID of the space to create the cart for.</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.CartInfoResult> CreateCart(string SpaceId)
        {
            var tcs = new TaskCompletionSource<Csp.Systems.CartInfoResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_CreateCart_void_StringRC_CartInfoResultCallback(
                _ptr,
                SpaceId,
                CreateCartDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (GetCartCallbackDelegate))]
#endif
        static void GetCartCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.CartInfoResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.CartInfoResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly GetCartCallbackDelegate GetCartDelegateInstance = GetCartCallbackDelegateFunction;

        /// <summary>Gets a cart for the current user in the given space.</summary>
                /// <param name="SpaceId">ID of the space the cart belongs to.</param>
                /// <param name="CartId">ID of the cart.</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.CartInfoResult> GetCart(string SpaceId, string CartId)
        {
            var tcs = new TaskCompletionSource<Csp.Systems.CartInfoResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_GetCart_void_StringRC_StringRC_CartInfoResultCallback(
                _ptr,
                SpaceId,
                CartId,
                GetCartDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (AddShopifyStoreCallbackDelegate))]
#endif
        static void AddShopifyStoreCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.AddShopifyStoreResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.AddShopifyStoreResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly AddShopifyStoreCallbackDelegate AddShopifyStoreDelegateInstance =
            AddShopifyStoreCallbackDelegateFunction;

        /// <summary>Adds a Shopify store to a space.</summary>
                /// <param name="StoreName">The store name (URL) to the Shopify store. Do not include the '.shopify.com' part of the url.</param>
                /// <param name="SpaceId">ID of the space to link the store to.</param>
                /// <param name="IsEcommerceActive">Bool to set the ecommerce system status on creation.</param>
                /// <param name="PrivateAccessToken">The access token for the shopify storefront.</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.AddShopifyStoreResult> AddShopifyStore(
            string StoreName,
            string SpaceId,
            bool IsEcommerceActive,
            string PrivateAccessToken
        ) {
            var tcs = new TaskCompletionSource<Csp.Systems.AddShopifyStoreResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_AddShopifyStore_void_StringRC_StringRC_boolC_StringRC_AddShopifyStoreResultCallback(
                _ptr,
                StoreName,
                SpaceId,
                IsEcommerceActive,
                PrivateAccessToken,
                AddShopifyStoreDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (ValidateShopifyStoreCallbackDelegate))]
#endif
        static void ValidateShopifyStoreCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.ValidateShopifyStoreResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.ValidateShopifyStoreResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly ValidateShopifyStoreCallbackDelegate ValidateShopifyStoreDelegateInstance =
            ValidateShopifyStoreCallbackDelegateFunction;

        /// <summary>Validates a shopify store given a store name and an access token.</summary>
                /// <param name="StoreName">The store name (URL) to the Shopify store. Do not include the '.shopify.com' part of the url.</param>
                /// <param name="PrivateAccessToken">The access token for the shopify storefront.</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.ValidateShopifyStoreResult> ValidateShopifyStore(
            string StoreName,
            string PrivateAccessToken
        ) {
            var tcs = new TaskCompletionSource<Csp.Systems.ValidateShopifyStoreResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_ValidateShopifyStore_void_StringRC_StringRC_ValidateShopifyStoreResultCallback(
                _ptr,
                StoreName,
                PrivateAccessToken,
                ValidateShopifyStoreDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }

#if !UNITY_EDITOR && ENABLE_IL2CPP
        [AOT.MonoPInvokeCallback (typeof (UpdateCartInformationCallbackDelegate))]
#endif
        static void UpdateCartInformationCallbackDelegateFunction(IntPtr _StateObject__, NativePointer _Result)
        {
            var _handle = (GCHandle)_StateObject__;
            var tcs = (TaskCompletionSource<Csp.Systems.CartInfoResult>)_handle.Target;
            var _this = (ECommerceSystem)tcs.Task.AsyncState;

            var task_result = new Csp.Systems.CartInfoResult(_Result);

            if (task_result.GetResultCode() == Csp.Systems.EResultCode.InProgress)
            {
                return;
            }

            tcs.SetResult(task_result);
            _handle.Free();
        }

        static readonly UpdateCartInformationCallbackDelegate UpdateCartInformationDelegateInstance =
            UpdateCartInformationCallbackDelegateFunction;

        /// <summary>Update cart information from a shopify store within a space</summary>
                /// <param name="CartInformation">Updated Cart Object.</param>
                /// <returns>The result for the request</returns>

        public Task<Csp.Systems.CartInfoResult> UpdateCartInformation(Csp.Systems.CartInfo CartInformation)
        {
            var tcs = new TaskCompletionSource<Csp.Systems.CartInfoResult>(this);
            var handle = GCHandle.Alloc(tcs);

            csp_systems_ECommerceSystem_UpdateCartInformation_void_CartInfoRC_CartInfoResultCallback(
                _ptr,
                CartInformation._ptr,
                UpdateCartInformationDelegateInstance,
                (IntPtr)handle
            );

            return tcs.Task;
        }
    }
}

