// WARNING: DO NOT EDIT THIS FILE! IT IS A GENERATED FILE AND
//   ANY CHANGES YOU MAKE WILL BE OVERWRITTEN ON THE NEXT BUILD

#nullable enable annotations

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;

namespace Csp.Systems
{
    /// @ingroup ECommerce System
    /// <summary>Represents variant information for a product</summary>

    public class ProductVariantInfo : NativeClassWrapper, IDisposable
    {
        internal override string _safeTypeName { get; } = "csp_systems_ProductVariantInfo";

        #region P/Invoke
#pragma warning disable IDE1006


        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_ProductVariantInfo__Get_Id(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_Id(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_ProductVariantInfo__Get_Title(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_Title(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern IntPtr csp_systems_ProductVariantInfo__Get_Url(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_Url(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern bool csp_systems_ProductVariantInfo__Get_AvailableForSale(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_AvailableForSale(IntPtr @class, bool value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_ProductVariantInfo__Get_Media(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_Media(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_ProductVariantInfo__Get_Options(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_Options(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_ProductVariantInfo__Get_UnitPrice(IntPtr @class);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo__Set_UnitPrice(IntPtr @class, IntPtr value);

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern NativePointer csp_systems_ProductVariantInfo_Ctor();

        [
            DllImport(
#if !UNITY_EDITOR && UNITY_IOS
            "__Internal"
#elif DEBUG && !UNITY_EDITOR_OSX && !UNITY_STANDALONE_OSX
                "ConnectedSpacesPlatform_D"
#else
                "ConnectedSpacesPlatform"
#endif
            ),
            SuppressUnmanagedCodeSecurity
        ]
        static extern void csp_systems_ProductVariantInfo_Dtor(IntPtr @class);

#pragma warning restore IDE1006
        #endregion

        internal ProductVariantInfo(NativePointer ptr) : base(ptr) { }

        /// @brief Id of the variant.

        public string Id
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_ProductVariantInfo__Get_Id(_ptr));
            set => csp_systems_ProductVariantInfo__Set_Id(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        /// @brief Title of the variant.

        public string Title
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_ProductVariantInfo__Get_Title(_ptr));
            set => csp_systems_ProductVariantInfo__Set_Title(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        /// @brief Url of variant.

        public string Url
        {
            get => WrapperHelper.NativeUTF8ToString(csp_systems_ProductVariantInfo__Get_Url(_ptr));
            set => csp_systems_ProductVariantInfo__Set_Url(_ptr, WrapperHelper.StringToNativeUTF8(value));
        }

        /// @brief Is variant available for sale.

        public bool AvailableForSale
        {
            get => csp_systems_ProductVariantInfo__Get_AvailableForSale(_ptr);
            set => csp_systems_ProductVariantInfo__Set_AvailableForSale(_ptr, value);
        }

        /// @brief Media for a variant

        public Csp.Systems.ProductMediaInfo Media
        {
            get => new Csp.Systems.ProductMediaInfo(csp_systems_ProductVariantInfo__Get_Media(_ptr));
            set => csp_systems_ProductVariantInfo__Set_Media(_ptr, value._ptr);
        }

        /// @brief Additional options for variant

        public Csp.Common.Array<Csp.Systems.VariantOptionInfo> Options
        {
            get =>
                new Csp.Common.Array<Csp.Systems.VariantOptionInfo>(csp_systems_ProductVariantInfo__Get_Options(_ptr));
            set => csp_systems_ProductVariantInfo__Set_Options(_ptr, value._ptr);
        }

        /// @brief Unit price for the variant

        public Csp.Systems.CurrencyInfo UnitPrice
        {
            get => new Csp.Systems.CurrencyInfo(csp_systems_ProductVariantInfo__Get_UnitPrice(_ptr));
            set => csp_systems_ProductVariantInfo__Set_UnitPrice(_ptr, value._ptr);
        }

        public ProductVariantInfo()
        {
            var np = csp_systems_ProductVariantInfo_Ctor();
            _ptr = np.Pointer;
            _ownsPtr = np.OwnsOwnData;
        }

        ~ProductVariantInfo()
        {
            //RealDispose();
        }

        void RealDispose()
        {
            if (_ownsPtr && !_disposed)
            {
                csp_systems_ProductVariantInfo_Dtor(_ptr);
                _disposed = true;
            }

            _disposed = true;
        }

        public void Dispose()
        {
            RealDispose();
            GC.SuppressFinalize(this);
        }
    }
}

